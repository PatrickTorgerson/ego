//~
//~--------------------------------------------------------
//~  source
//~--------------------------------------------------------
//~

const result = i32: 1
const a,b,c = i32:4 , u32:6, u8:8
const resolved_expr = i64: (1 + 1) * 8 + 55 * 2

//~
//~--------------------------------------------------------
//~  parse tree
//~--------------------------------------------------------
//~
//~ module
//~  |- var_decl: result
//~  |   |- typed_expr: i32
//~  |   |   |- literal_int: 1
//~  |- var_decl: a,b,c
//~  |   |- typed_expr: i32
//~  |   |   |- literal_int: 4
//~  |   |- typed_expr: u32
//~  |   |   |- literal_int: 6
//~  |   |- typed_expr: u8
//~  |   |   |- literal_int: 8
//~  |- var_decl: resolved_expr
//~  |   |- typed_expr: i64
//~  |   |   |- add
//~  |   |   |   |- mul
//~  |   |   |   |   |- add
//~  |   |   |   |   |   |- literal_int: 1
//~  |   |   |   |   |   |- literal_int: 1
//~  |   |   |   |   |- literal_int: 8
//~  |   |   |   |- mul
//~  |   |   |   |   |- literal_int: 55
//~  |   |   |   |   |- literal_int: 2
//~
//~--------------------------------------------------------
//~  intermediate representation
//~--------------------------------------------------------
//~
//~ %0 = global 'result'
//~ %1 = i32 1
//~ %2 = set %0 %1
//~ %3 = global 'c'
//~ %4 = global 'b'
//~ %5 = global 'a'
//~ %6 = i32 4
//~ %7 = set %5 %6
//~ %8 = u32 6
//~ %9 = set %4 %8
//~ %10 = u8 8
//~ %11 = set %3 %10
//~ %12 = global 'resolved_expr'
//~ %13 = i64 1
//~ %14 = i64 1
//~ %15 = add %13 %14
//~ %16 = i64 8
//~ %17 = mul %15 %16
//~ %18 = i64 55
//~ %19 = i64 2
//~ %20 = mul %18 %19
//~ %21 = add %17 %20
//~ %22 = set %12 %21
